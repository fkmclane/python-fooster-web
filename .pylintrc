[MASTER]

# Add files or directories to the blacklist. They should be base names, not
# paths.
ignore=


[MESSAGES CONTROL]

# Disable the message, report, category or checker with the given id(s). You
# can either give multiple identifiers separated by comma (,) or put this
# option multiple times (only on the command line, not in the configuration
# file where it should appear only once). You can also use "--disable=all" to
# disable everything first and then reenable specific checks. For example, if
# you want to run only the similarities checker, you can use "--disable=all
# --enable=similarities". If you want to run only the classes checker, but have
# no Warning level messages displayed, use "--disable=all --enable=classes
# --disable=W".
disable=line-too-long,
        too-many-branches,
        too-many-statements,
        too-many-locals,
        too-few-public-methods,
        no-else-return,
        no-else-continue,
        too-many-lines,
        logging-format-interpolation,
        logging-not-lazy,
        # TODO: Temporary docstring stuff
        missing-module-docstring,
        missing-class-docstring,
        missing-function-docstring


[REPORTS]

# Activate the evaluation score.
score=no


[LOGGING]

# Format style used to check logging format string. `old` means using %
# formatting, `new` is for `{}` formatting,and `fstr` is for f-strings.
logging-format-style=new

# Logging modules to check that the string format arguments are in logging
# function parameter format.
logging-modules=logging


[BASIC]

# Naming style matching correct argument names.
argument-rgx=[a-z_][a-z0-9_]{0,30}$

# Naming style matching correct attribute names.
attr-naming-style=snake_case

# Bad variable names which should always be refused, separated by a comma.
bad-names=foo,
          bar,
          baz,
          toto,
          tutu,
          tata,
          i,
          j,
          k

# Naming style matching correct class attribute names.
class-attribute-naming-style=snake_case

# Naming style matching correct class names.
class-naming-style=PascalCase

# Naming style matching correct constant names.
const-rgx=[a-zA-Z_][a-zA-Z0-9_]{0,30}$

# Minimum line length for functions/classes that require docstrings, shorter
# ones are exempt.
docstring-min-length=-1

# Naming style matching correct function names.
function-naming-style=snake_case

# Good variable names which should always be accepted, separated by a comma.
good-names=_

# Naming style matching correct inline iteration names.
inlinevar-naming-style=snake_case

# Naming style matching correct method names.
method-naming-style=snake_case

# Naming style matching correct module names.
module-naming-style=snake_case

# Regular expression matching correct variable names. Overrides variable-
# naming-style.
variable-rgx=[a-z_][a-z0-9_]{0,30}


[ELIF]

# Maximum number of nested blocks for function / method body
max-nested-blocks=8


[DESIGN]

# Maximum number of arguments for function / method.
max-args=8

# Maximum number of attributes for a class (see R0902).
max-attributes=24

# Maximum number of boolean expressions in an if statement (see R0916).
max-bool-expr=5

# Maximum number of branch for function / method body.
max-branches=12

# Maximum number of locals for function / method body.
max-locals=15

# Maximum number of parents for a class (see R0901).
max-parents=7

# Maximum number of public methods for a class (see R0904).
max-public-methods=24

# Maximum number of return / yield for function / method body.
max-returns=6

# Maximum number of statements in function / method body.
max-statements=50

# Minimum number of public methods for a class (see R0903).
min-public-methods=2
